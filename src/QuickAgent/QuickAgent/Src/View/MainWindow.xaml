<Window x:Class="QuickAgent.View.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Icon="/QuickAgent;component/Resource/Images/Huawei.ico" WindowStyle="None" ResizeMode="NoResize" Background="WhiteSmoke"
        Loaded="OnMainWindowLoad" Closed="OnMainWindowClosed">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/QuickAgent;component/Src/Style/ButtonStyle.xaml"/>
                <ResourceDictionary Source="/QuickAgent;component/Src/Style/Style.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition />
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="10"/>
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="10"/>
        </Grid.ColumnDefinitions>

        <!--<开始菜单>-->
        <Border Name="Border_StartMenu"  Grid.Column="0">
            <Button x:Name="btnStart" Style="{StaticResource StartButton}" ToolTip="{DynamicResource ResourceKey=start}" Initialized="btnStart_Initialized" Click="btnStart_Click" FontSize="15" Padding="1" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                <Button.ContextMenu>
                    <ContextMenu x:Name="ctxtStartMenu">
                        <MenuItem Name="MenuItem_Login"   Header="{DynamicResource logIn}" Click="OnLoginClick" Visibility="{Binding Path=LoginVisibility}"/>
                        <MenuItem Name="MenuItem_LogOut" Header="{DynamicResource logOut}" Click="OnLogOutClick" Visibility="{Binding Path=LogoutVisibility}" />
                        <MenuItem Name="MenuItem_Config" Header="{DynamicResource config}" Click="OnConfigClick"/>
                        <MenuItem Name="MenuItem_Instruction" Header="{DynamicResource main_instruc}" Click="OnInstructionClick"/>
                        <MenuItem Name="MenuItem_InstallCerti" Header="{DynamicResource other_installCertification}" Click="OnInstallCertiClick"/>
                        <MenuItem Name="MenuItem_Helper" Header="{DynamicResource help}" Click="OnHelpClick"/>
                        <MenuItem Name="MenuItem_Exit" Header="{DynamicResource exit}"  Click="OnExitClick" />

                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
        </Border>
        <Border Grid.Column="1">
            <ComboBox Name="ComboBox_CallType" SelectedIndex="0" Style="{StaticResource ComboBoxStyle}" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" FontSize="13" ItemsSource="{Binding}" Focusable="False" BorderThickness="0" Padding="2,0" VerticalAlignment="Stretch" HorizontalAlignment="Center" Margin="2,4" ClipToBounds="True" Width="116">
                <ComboBoxItem Content="{DynamicResource normalVoiceCall}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontSize="13" Margin="2,1" Width="Auto"/>
                <ComboBoxItem Content="{DynamicResource main_textmessage}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" FontSize="13" Margin="2,1" Width="Auto" Visibility="Collapsed"/>
            </ComboBox>
        </Border>

        <!--<功能按钮>-->
        <Viewbox  Grid.Column="2" HorizontalAlignment="Left">
            <Canvas Width="{Binding ControlBarWidth}" Height="{Binding ControlBarHeight}">
                <Grid Canvas.Left="0" Canvas.Top="0" Name="GridBtn" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition Width="auto"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button x:Name="ReleaseButton" Grid.Column="0" Cursor="Hand" Click="OnReleaseClick" Style="{StaticResource ReleaseButton}" ToolTip="{DynamicResource release}" FlowDirection="LeftToRight" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">
                    </Button>
                    <Button Name="Btn_ExitWork" Grid.Column="1" Cursor="Hand" Style="{StaticResource CancelWorkButton}" Click="OnExitWorkClick" VerticalAlignment="Top" ToolTip="{DynamicResource cancelWork}"></Button>
                    <Button Name="Btn_EnterWork" Grid.Column="2" Cursor="Hand" Click="OnEnterWorkClick" Style="{StaticResource SetWorkButton}" VerticalAlignment="Top" ToolTip="{DynamicResource setWork}"></Button>
                    <Button Grid.Column="3" x:Name="AnswerButton" Cursor="Hand" Style="{StaticResource AnswerButton}" Click="OnAnswerClick" ToolTip="{DynamicResource answer}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" />
                    <Button Name="Btn_SetData" Grid.Column="4" Height="{Binding ComponentHeight}" Cursor="Hand" Style="{StaticResource SetDataButton}" Click="OnSetDataClick" VerticalAlignment="Top" ToolTip="{DynamicResource setData}"></Button>
                    <Button Name="Btn_QueryData" Grid.Column="5" Height="{Binding ComponentHeight}" Cursor="Hand" Style="{StaticResource GetDataButton}" Click="OnQueryDataClick" VerticalAlignment="Top" ToolTip="{DynamicResource getData}"></Button>
                    <Button Name="Btn_CallTransform" Grid.Column="6" Click="OnCallTransformClick" Cursor="Hand" Style="{StaticResource TransferButton}" ToolTip="{DynamicResource callTransfer}" VerticalAlignment="Top"></Button>
                    <Button Name="Btn_TransformOut" Grid.Column="7" Cursor="Hand" Style="{StaticResource TransferOutButton}" Click="OnTransformOutClick" VerticalAlignment="Top" ToolTip="{DynamicResource transferOut}"></Button>
                    <Button Grid.Column="8" x:Name="NoSoundButton" IsEnabled="{Binding Path=IsMute}" Cursor="Hand" Style="{StaticResource NoSoundButton}" Height="Auto" Width="Auto" Click="OnNoSoundClick" ToolTip="{DynamicResource mute}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch"  Focusable="False"/>
                    <Button Grid.Column="9"  x:Name="HoldButton" IsEnabled="{Binding IsHold}" Cursor="Hand" Style="{StaticResource HoldButton}" Height="Auto" Width="Auto" Click="OnHoldClick" ToolTip="{DynamicResource hold}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" />
                    <Button Grid.Column="10" x:Name="UnholdButton" IsEnabled="{Binding IsUNHold}" Cursor="Hand" Style="{StaticResource UnholdButton}" Height="Auto" Width="Auto" Click="OnUnHoldClick" ToolTip="{DynamicResource unhold}" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" />
                    <Button Name="Btn_TripartiteCall" Grid.Column="11" Click="OnTripartiteCallClick" Cursor="Hand" Style="{StaticResource TripartiteCallButton}" ToolTip="{DynamicResource threeCall}" VerticalAlignment="Top"></Button>
                    <Button Name="Btn_ConnectHold" Grid.Column="12" Cursor="Hand" Style="{StaticResource ConnectHoldButton}" ToolTip="{DynamicResource connectHold}" Click="OnConnectHoldClick" VerticalAlignment="Top"></Button>
                    <Button Name="Btn_InternalCall" Grid.Column="13" Click="OnInnerCallClick" Cursor="Hand" Style="{StaticResource InternalCallButton}" ToolTip="{DynamicResource innerCall}" VerticalAlignment="Top"></Button>
                    <Button Name="Btn_CallOut" Grid.Column="14" Click="OnCallOutClick" Foreground="Black" Cursor="Hand" Style="{StaticResource CallOutButton}" ToolTip="{DynamicResource callOut}" VerticalAlignment="Top"></Button>
                    <Button Name="Btn_Busy" Grid.Column="15" Cursor="Hand" Style="{StaticResource BusyButton}" ToolTip="{DynamicResource busy}" Click="OnBusyStateClick" VerticalAlignment="Top" Focusable="False"></Button>
                    <Button Name="Btn_Rest" Grid.Column="16" Cursor="Hand" Style="{StaticResource RestButton}" ToolTip="{DynamicResource rest}" Click="OnRestStateClick" VerticalAlignment="Top" Focusable="False"></Button>
                    <Button Name="Btn_InternalRequestHelp" Grid.Column="17" Click="OnInternalRequestHelpClick" Cursor="Hand" Style="{StaticResource InnerConsultButton}" ToolTip="{DynamicResource innerConsult}"></Button>
                    <Button Name="Btn_Announcement" Grid.Column="18" Height="{Binding ComponentHeight}" Cursor="Hand" Style="{StaticResource AnnouncementButton}" ToolTip="{DynamicResource announcement}" Click="OnAnnouncementClick" VerticalAlignment="Top"></Button>
                    <Button Name="Btn_DispatchNote" Grid.Column="19" Height="{Binding ComponentHeight}" Cursor="Hand" Style="{StaticResource SendNoteButton}" ToolTip="{DynamicResource sendNote}" Click="OnDispatchNoteClick" VerticalAlignment="Top" ></Button>
                </Grid>
            </Canvas>
        </Viewbox>

        <!--<坐席工号>-->
        <Border Name="Border_Omni"  Grid.Column="3">
            <TextBlock Name="TextBlock_JobNumber" Text="{Binding JobNumber}" TextAlignment="Right" HorizontalAlignment="Right" VerticalAlignment="Center" ToolTip="{DynamicResource agentId}"/>
        </Border>

        <Border Grid.Column="4">
            <TextBlock Name="tbk_PhoneNumber" TextAlignment="Left" HorizontalAlignment="Left" VerticalAlignment="Center" ToolTip="{DynamicResource phoneNumber}"/>
        </Border>

        <!--<主叫号码>-->
        <Border Name="Border_Empty1"  Grid.Column="6">
            <TextBlock Name="TextBlock_CallerNumber" Text="{Binding CallerNumber}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" ToolTip="{DynamicResource callerNumber}"/>
        </Border>

        <!--<被叫号码>-->
        <Border Name="Border_Empty2"  Grid.Column="8">
            <TextBlock Name="TextBlock_CalledNumber" Text="{Binding CalledNumber}" HorizontalAlignment="Center" VerticalAlignment="Center" TextAlignment="Center" ToolTip="{DynamicResource calledNumber}" />
        </Border>
        <!--<座席状态图标>-->
        <Border Name="Border_StateIcon"  Grid.Column="10">
            <Grid ShowGridLines="False">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>
                <Image Name="Image_StateIcon" Source="{Binding Path=AgentStateIcon}" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" StretchDirection="DownOnly" Margin="2" />
                <Image x:Name="Image_NowState" Source="{Binding Path=CurAgentStateIcon}" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="None" StretchDirection="DownOnly" Margin="2" ToolTip="{DynamicResource currentState}" />
            </Grid>
        </Border>
        <!--<坐席状态>-->
        <Border Name="Border_AgentState"  Grid.Column="12">
            <TextBlock Name="TextBlock_AgentState" Text="{Binding Path=AgentState}" TextAlignment="Center" HorizontalAlignment="Center" VerticalAlignment="Center" />
        </Border>
        <Grid Name="confGrid" Visibility="Collapsed"/>
    </Grid>
</Window>
